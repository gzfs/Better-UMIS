// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
	BaseClientOptions,
	SchemaInference,
	XataRecord,
} from "@xata.io/client";

const tables = [
	{
		name: "umis_tokens",
		checkConstraints: {
			umis_tokens_xata_id_length_xata_id: {
				name: "umis_tokens_xata_id_length_xata_id",
				columns: ["xata_id"],
				definition: "CHECK ((length(xata_id) < 256))",
			},
		},
		foreignKeys: {},
		primaryKey: [],
		uniqueConstraints: {
			_pgroll_new_umis_tokens_xata_id_key: {
				name: "_pgroll_new_umis_tokens_xata_id_key",
				columns: ["xata_id"],
			},
			umis_tokens__pgroll_new_is_active_key: {
				name: "umis_tokens__pgroll_new_is_active_key",
				columns: ["is_active"],
			},
			umis_tokens__pgroll_new_token_key: {
				name: "umis_tokens__pgroll_new_token_key",
				columns: ["token"],
			},
			umis_tokens__pgroll_new_username_key: {
				name: "umis_tokens__pgroll_new_username_key",
				columns: ["username"],
			},
		},
		columns: [
			{
				name: "is_active",
				type: "bool",
				notNull: true,
				unique: true,
				defaultValue: "false",
				comment: "",
			},
			{
				name: "token",
				type: "text",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "username",
				type: "text",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "xata_createdat",
				type: "datetime",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "xata_id",
				type: "text",
				notNull: true,
				unique: true,
				defaultValue: "('rec_'::text || (xata_private.xid())::text)",
				comment: "",
			},
			{
				name: "xata_updatedat",
				type: "datetime",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "xata_version",
				type: "int",
				notNull: true,
				unique: false,
				defaultValue: "0",
				comment: "",
			},
		],
	},
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export interface UmisTokens {
	is_active: boolean;
	token: string;
	username: string;
	xata_createdat: string;
	xata_id: string;
	xata_updatedat: string;
	xata_version: number;
}
export type UmisTokensRecord = UmisTokens & XataRecord;

export type DatabaseSchema = {
	umis_tokens: UmisTokensRecord;
};

const DatabaseClient = buildClient();

export class XataClient extends DatabaseClient<DatabaseSchema> {
	constructor(options?: BaseClientOptions) {
		const defaultOptions = {
			databaseURL:
				"https://Vishal-DBS-s-workspace-ojg109.us-east-1.xata.sh/db/UMIS",
			branch: "main",
			enableBrowser: true,
		};
		super({ ...defaultOptions, ...options }, tables);
	}
}
